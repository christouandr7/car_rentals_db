/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_db;

import java.awt.HeadlessException;
import java.sql.*;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author kyriacos2
 */
public class TblCustomers extends javax.swing.JFrame {

   private Connection conn = null;
    private Statement stmt = null;
    private ResultSet rs = null;
    private PreparedStatement prstmt = null;
    private final String sql="SELECT c.Customer_ID, c.IRS_Number, c.Social_Security_Number, c.First_Name, c.Last_Name, c.Driver_License, c.First_Registration, c.Street_Number, c.Street, c.City, c.Postal_Code "
                             + "FROM customer AS c;";
    private String sqlins ="INSERT INTO customer (Customer_ID, IRS_Number, Social_Security_Number, First_Name, Last_Name, Driver_License, First_Registration, Street_Number, Street, City, Postal_Code) "
                            + "VALUES (?,?,?,?,?,?,?,?,?,?,?);";
    private String sqlup ="UPDATE customer "
                        + "SET IRS_Number=?, Social_Security_Number=?, First_Name=?, Last_Name=?, Driver_License=?, First_Registration=?, Street_Number=?, Street=?, City=?, Postal_Code=? "
                        + "WHERE Customer_ID=?;";
    private String sqldl="DELETE FROM customer "
                        + "WHERE Customer_ID=?;";
    /**
     * Creates new form Table1
     */
    public TblCustomers() {
        initComponents();
        conn = Utils.getConnection();
        prepareInputs();
        fillTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jbtnInsert = new javax.swing.JButton();
        jbtnUpdate = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();
        jbtnClear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jbtnEdit = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtxtCode = new javax.swing.JTextField();
        jtxtID = new javax.swing.JTextField();
        jtxtIRS = new javax.swing.JTextField();
        jtxtSSN = new javax.swing.JTextField();
        jtxtName = new javax.swing.JTextField();
        jtxtSurname = new javax.swing.JTextField();
        jtxtLicense = new javax.swing.JTextField();
        jtxtSnum = new javax.swing.JTextField();
        jtxtStreet = new javax.swing.JTextField();
        jtxtCity = new javax.swing.JTextField();
        jdcFirst = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnBack.setText("Back");
        jbtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBackActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 380, 70, -1));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 910, 400));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Customers");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, -1, -1));

        jbtnInsert.setText("Insert");
        jbtnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInsertActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 90, -1));

        jbtnUpdate.setText("Update");
        jbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 110, -1));

        jbtnDelete.setText("Delete");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 90, -1));

        jbtnClear.setText("Clear");
        jbtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClearActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, 90, -1));

        jLabel2.setText("*Customer ID:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, 20));

        jLabel3.setText("*IRS Number:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, 20));

        jLabel4.setText("*First Name:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, 20));

        jLabel5.setText("Last Name:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, 20));

        jLabel6.setText("*S.S.N.:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, -1, 20));

        jLabel7.setText("Driver License:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, 20));

        jLabel8.setText("*First Registration:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, -1, 20));

        jLabel9.setText("*Mandatory fields");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, -1, -1));

        jbtnEdit.setText("Edit Selected Row");
        jbtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, -1, -1));

        jLabel10.setText("*Street Number:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, 20));

        jLabel11.setText("*Street:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, 20));

        jLabel12.setText("*City:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, -1, 20));

        jLabel13.setText("*Postal Code:");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, 20));

        jtxtCode.setText("jTextField1");
        getContentPane().add(jtxtCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 140, 20));

        jtxtID.setText("jTextField1");
        getContentPane().add(jtxtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 140, 20));

        jtxtIRS.setText("jTextField1");
        getContentPane().add(jtxtIRS, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 140, 20));

        jtxtSSN.setText("jTextField1");
        getContentPane().add(jtxtSSN, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 140, 20));

        jtxtName.setText("jTextField1");
        getContentPane().add(jtxtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 140, 20));

        jtxtSurname.setText("jTextField1");
        getContentPane().add(jtxtSurname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 140, 20));

        jtxtLicense.setText("jTextField1");
        getContentPane().add(jtxtLicense, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 140, 20));

        jtxtSnum.setText("jTextField1");
        getContentPane().add(jtxtSnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 140, 20));

        jtxtStreet.setText("jTextField1");
        getContentPane().add(jtxtStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 140, 20));

        jtxtCity.setText("jTextField1");
        getContentPane().add(jtxtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 140, 20));

        jdcFirst.setDateFormatString("yyyy-MM-dd");
        getContentPane().add(jdcFirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 140, -1));

        setSize(new java.awt.Dimension(1231, 521));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbtnBackActionPerformed

    private void jbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateActionPerformed
        // TODO add your handling code here:
        Date FirstDate;
        int id,code,snum;
        long irs,lice,ssn;
        String name,surname,street,city;
        FirstDate=Date.valueOf(((JTextField)jdcFirst.getDateEditor().getUiComponent()).getText());
        
        boolean lathos = false;
        try {
            id = Integer.parseInt(jtxtID.getText());
            if(id < 0 || id == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "Customer_ID", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtID.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "Customer_ID", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            irs = Long.parseLong(jtxtIRS.getText());
            if(irs < 0 || irs == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "IRS_Number", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtIRS.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "IRS_Number", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            ssn = Long.parseLong(jtxtSSN.getText());
            if(ssn < 0 || ssn == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "Social Security Number", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtSSN.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "Social Security Number", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            name = jtxtName.getText();
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtName.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "First_Name", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        surname= jtxtSurname.getText();
        if(!jtxtLicense.getText().isEmpty()){
            lice = Long.parseLong(jtxtLicense.getText());
            if(lice < 0 || lice == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "Driver_License", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            snum = Integer.parseInt(jtxtSnum.getText());
            if(snum < 0 || snum == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "Street_Number", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtSnum.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "Street_Number", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            street = jtxtStreet.getText();
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtStreet.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "Street", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            city = jtxtCity.getText();
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtCity.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "City", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            code = Integer.parseInt(jtxtCode.getText());
            if(code < 0 || code == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "Postal_Code", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtCode.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "Postal_Code", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        if (jtxtID.getText().isEmpty() || jtxtIRS.getText().isEmpty() || jtxtSSN.getText().isEmpty() || jtxtName.getText().isEmpty() || jtxtSnum.getText().isEmpty() || jtxtStreet.getText().isEmpty() || jtxtCity.getText().isEmpty() || jtxtCode.getText().isEmpty())
        {
            lathos=true;
            JOptionPane.showMessageDialog(null,"Please fill all mandatory fields!");
        }
        
        if(!lathos)
        {
            try {
                prstmt=conn.prepareStatement(sqlup);
                prstmt.setLong(1, Long.parseLong(jtxtIRS.getText()));
                prstmt.setLong(2, Long.parseLong(jtxtSSN.getText()));
                prstmt.setString(3, jtxtName.getText());
                prstmt.setString(4, jtxtSurname.getText());
                if(!jtxtLicense.getText().isEmpty()){
                    prstmt.setLong(5, Long.parseLong(jtxtLicense.getText()));
                }
                else
                {
                    prstmt.setNull(5, java.sql.Types.BIGINT);
                }
                prstmt.setDate(6,FirstDate);
                prstmt.setInt(7, Integer.parseInt(jtxtSnum.getText()));
                prstmt.setString(8, jtxtStreet.getText());
                prstmt.setString(9, jtxtCity.getText());
                prstmt.setInt(10, Integer.parseInt(jtxtCode.getText()));
                prstmt.setInt(11, Integer.parseInt(jtxtID.getText()));
                
                int i=prstmt.executeUpdate();
                if(i==0)
                {
                   JOptionPane.showMessageDialog(null,"Customer_ID Can not be changed!");
                }
            } catch (SQLException ex) {
                Logger.getLogger(QrService.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    if(prstmt!=null)
                        prstmt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(QrAvailVehYear.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            fillTableData();
            clearInputs();
        }
        
    }//GEN-LAST:event_jbtnUpdateActionPerformed

    private void jbtnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInsertActionPerformed
        // TODO add your handling code here:
        Date FirstDate;
        int id,code,snum;
        long irs,lice,ssn;
        String name,surname,street,city;
        FirstDate=Date.valueOf(((JTextField)jdcFirst.getDateEditor().getUiComponent()).getText());
        
        boolean lathos = false;
        try {
            id = Integer.parseInt(jtxtID.getText());
            if(id < 0 || id == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "Customer_ID", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtID.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "Customer_ID", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            irs = Long.parseLong(jtxtIRS.getText());
            if(irs < 0 || irs == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "IRS_Number", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtIRS.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "IRS_Number", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            ssn = Long.parseLong(jtxtSSN.getText());
            if(ssn < 0 || ssn == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "Social Security Number", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtSSN.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "Social Security Number", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            name = jtxtName.getText();
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtName.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "First_Name", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        surname= jtxtSurname.getText();
        
        if(!jtxtLicense.getText().isEmpty()){
            lice = Long.parseLong(jtxtLicense.getText());
            if(lice < 0 || lice == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "Driver_License", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            snum = Integer.parseInt(jtxtSnum.getText());
            if(snum < 0 || snum == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "Street_Number", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtSnum.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "Street_Number", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            street = jtxtStreet.getText();
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtStreet.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "Street", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            city = jtxtCity.getText();
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtCity.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "City", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            code = Integer.parseInt(jtxtCode.getText());
            if(code < 0 || code == 0){
                lathos = true;
                JOptionPane.showMessageDialog(this, "Δεν μπορεί το πεδίο  να πάρει τιμή ' =< 0 '", "Postal_Code", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            if (!jtxtCode.getText().isEmpty()) {
                lathos = true;
                JOptionPane.showMessageDialog(this, "Μη επιτρεπτή τιμή εισόδου.", "Postal_Code", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        if (jtxtID.getText().isEmpty() || jtxtIRS.getText().isEmpty() || jtxtSSN.getText().isEmpty() || jtxtName.getText().isEmpty() || jtxtSnum.getText().isEmpty() || jtxtStreet.getText().isEmpty() || jtxtCity.getText().isEmpty() || jtxtCode.getText().isEmpty())
        {
            lathos=true;
            JOptionPane.showMessageDialog(null,"Please fill all mandatory fields!");
        }
        
        if(!lathos)
        {
            try {
                prstmt=conn.prepareStatement(sqlins);
                prstmt.setInt(1, Integer.parseInt(jtxtID.getText()));
                prstmt.setLong(2, Long.parseLong(jtxtIRS.getText()));
                prstmt.setLong(3, Long.parseLong(jtxtSSN.getText()));
                prstmt.setString(4, jtxtName.getText());
                if(!jtxtLicense.getText().isEmpty()){
                    prstmt.setLong(5, Long.parseLong(jtxtLicense.getText()));
                }
                else
                {
                    prstmt.setNull(5, java.sql.Types.BIGINT);
                }
                prstmt.setLong(6, Long.parseLong(jtxtLicense.getText()));
                prstmt.setDate(7,FirstDate);
                prstmt.setInt(8, Integer.parseInt(jtxtSnum.getText()));
                prstmt.setString(9, jtxtStreet.getText());
                prstmt.setString(10, jtxtCity.getText());
                prstmt.setInt(11, Integer.parseInt(jtxtCode.getText()));
                
                prstmt.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(QrService.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    if(prstmt!=null)
                        prstmt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(QrAvailVehYear.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            fillTableData();
            clearInputs();
        }
        
    }//GEN-LAST:event_jbtnInsertActionPerformed

    private void jbtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClearActionPerformed
        // TODO add your handling code here:
        clearInputs();
    }//GEN-LAST:event_jbtnClearActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        // TODO add your handling code here:
        int i=jTable.getSelectedRow();
        if (i!=-1)
        {
            try {
                prstmt=conn.prepareStatement(sqldl);
                prstmt.setString(1, jTable.getModel().getValueAt(i, 0).toString());
                jTable.clearSelection();
                prstmt.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(QrService.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    if(prstmt!=null)
                        prstmt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(QrAvailVehYear.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            fillTableData();
        }
        else
            JOptionPane.showMessageDialog(null,"Please select a row!");
    }//GEN-LAST:event_jbtnDeleteActionPerformed

    private void jbtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditActionPerformed
        // TODO add your handling code here:
        int i=jTable.getSelectedRow();
        if (i!=-1)
        {
            jtxtID.setText(jTable.getModel().getValueAt(i, 0).toString());
            jtxtIRS.setText(jTable.getModel().getValueAt(i, 1).toString());
            jtxtSSN.setText(jTable.getModel().getValueAt(i, 2).toString());
            jtxtName.setText(jTable.getModel().getValueAt(i, 3).toString());
            jtxtSurname.setText(jTable.getModel().getValueAt(i, 4).toString());
            jtxtLicense.setText(jTable.getModel().getValueAt(i, 5).toString());
            jdcFirst.setDate(Date.valueOf(jTable.getModel().getValueAt(i, 6).toString()));
            jtxtSnum.setText(jTable.getModel().getValueAt(i, 7).toString());
            jtxtStreet.setText(jTable.getModel().getValueAt(i, 8).toString());
            jtxtCity.setText(jTable.getModel().getValueAt(i, 9).toString());
            jtxtCode.setText(jTable.getModel().getValueAt(i, 10).toString());
        }
        else
            JOptionPane.showMessageDialog(null,"Please select a row!");
    }//GEN-LAST:event_jbtnEditActionPerformed

    @Override
    public void dispose(){
        try {
            if(conn!=null)
                conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(QrFindCustomerInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
        MainMenu.tablesForm.setVisible(true);
        super.dispose();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TblCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TblCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TblCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TblCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TblCustomers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JButton jbtnBack;
    private javax.swing.JButton jbtnClear;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnEdit;
    private javax.swing.JButton jbtnInsert;
    private javax.swing.JButton jbtnUpdate;
    private com.toedter.calendar.JDateChooser jdcFirst;
    private javax.swing.JTextField jtxtCity;
    private javax.swing.JTextField jtxtCode;
    private javax.swing.JTextField jtxtID;
    private javax.swing.JTextField jtxtIRS;
    private javax.swing.JTextField jtxtLicense;
    private javax.swing.JTextField jtxtName;
    private javax.swing.JTextField jtxtSSN;
    private javax.swing.JTextField jtxtSnum;
    private javax.swing.JTextField jtxtStreet;
    private javax.swing.JTextField jtxtSurname;
    // End of variables declaration//GEN-END:variables

    private void fillTableData() {
        try {
            stmt=conn.createStatement();
            rs=stmt.executeQuery(sql);
            jTable.setAutoCreateRowSorter(true); ///////APORIA//////////
            Utils.showTable(rs, jTable);
            jTable.setDefaultEditor(Object.class,null);
        } catch (SQLException ex) {
            Logger.getLogger(TblCustomers.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            try {
                if(stmt!=null)
                    stmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(QrAvailVehYear.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void prepareInputs() {
        jdcFirst.setDate(Date.valueOf(LocalDate.now()));
        Utils.clearTextBoxes(this);
    }

    private void clearInputs() {
        jdcFirst.setDate(Date.valueOf(LocalDate.now()));
        Utils.clearTextBoxes(this);
        jTable.clearSelection();
    }
}
